# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to Google App Engine(Standard) when code is pushed to master branch
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google App Engine, including app.yaml, docker file to build image.
# 2. Set up secrets in your github repository: PROJECT_ID with the id of the project and GOOGLE_APPLICATION_CREDENTIALS with the JSON service account key created for your service account in your google cloud project.

name: Build and Deploy to GAE

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  GCP_PROJECT: ${{ secrets.PROJECT_ID }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy to Google App Engine
    runs-on: ubuntu-latest

    steps:
    #Checkout the repository code
    - name: Checkout
      uses: actions/checkout@v2
    
    #Cache the maven dependencies to .m2 directory
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    #Set the java-version to use
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    # Run unit tests
    - name: Running Unit Tests
      run: mvn test
    
    # Build the jar file with maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      
    # Setup gcloud CLI
    - name: Setup gcloud CLI
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
      with:
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        project_id: ${{ secrets.PROJECT_ID }}
        export_default_credentials: true 

    # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
#    - name: Configure Docker to use gcloud for authentication
#      run: |-
#        gcloud --quiet auth configure-docker
    
    # Pull previously pushed stages(if any), Build the Docker image using cache and push it to registry
    - uses: whoan/docker-build-with-cache-action@v5
      with:
        username: _json_key
        password: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        registry: gcr.io
        image_name: gcp-appengine          
        
    # Deploy the Docker image to the GKE cluster
    - name: Deploy the application to Google App Engine
      run: |-
        gcloud app deploy --quiet --version=java --project=$GCP_PROJECT --image-url=gcr.io/$GCP_PROJECT/gcp-appengine
